---
title: Tag label
editor: source
description: https://raphaelnussbaumer.com/GeoPressureManual/geopressuretemplate-label.html
---

```{r setup, message=FALSE}
# Choose the id
id <- "F11"

# Set the directory to the project root
# see Working directory bullet point in https://bookdown.org/yihui/rmarkdown/notebook.html#executing-code
knitr::opts_knit$set(root.dir = here::here())
# Alternatively, you can change the global RStudio settings in menu "Tools/Global Options...", on the "R Markdown" panel, choose "Project" for "Evaluate chunks in directory:"

library(GeoPressureR)
library(ggplot2)
library(plotly)
```

## Edit `config.yml`
Check that the config is correct.

```{r}
str(config::get(config = id))
```

## Sensor data and crop date

Check if the crop dates (in red) are correct.

```{r crop_date}
ggplotly(
  tag_create(id, quiet = TRUE) |>
    plot(type = "pressure", plot_plotly = FALSE) +
    geom_vline(
      xintercept = as.numeric(c(
        as.POSIXct(config::get("tag_create", id)$crop_start),
        as.POSIXct(config::get("tag_create", id)$crop_end)
      )),
      color = "red", lwd = 1
    )
)
```

You might want to change `type` to check the values of the other sensors (e.g., `acceleration` or `light`).

Create tag with cropped date

```{r tag_create}
tag <- tag_create(
  id,
  crop_start = config::get("tag_create", id)$crop_start,
  crop_end = config::get("tag_create", id)$crop_end
)
```

## Create label and edit on Trainset

```{r}
tag_label_write(tag)
```

Open `csv` and edit on <https://trainset.raphaelnussbaumer.com/>.

## Run [simple labelling checks](https://raphaelnussbaumer.com/GeoPressureManual/labelling-tracks.html#simple-checks)

**Check 1**

```{r}
tag <- tag_label(tag)
```


**Check 2**

```{r}
plot(tag, type = "pressure")
```

## Run [Pressurepath checks](https://raphaelnussbaumer.com/GeoPressureManual/labelling-tracks.html#pressurepath-checks)

Compute pressure map on a coarse grid to perform checks 3-5.

```{r, cache = TRUE}
tag <- tag_set_map(tag,
  extent = config::get("tag_set_map", id)$extent,
  scale = 1,
  known = config::get("tag_set_map", id)$known,
  include_min_duration = 24
) |>
  geopressure_map()
```

```{r, cache = TRUE}
pressurepath <- pressurepath_create(tag)
```

**Check 3**

```{r}
plot_pressurepath(pressurepath)
```

**Check 4**

```{r}
plot_pressurepath(pressurepath, type = "histogram")
```

## Run [GeoPressureViz checks](https://raphaelnussbaumer.com/GeoPressureManual/labelling-tracks.html#geopressureviz-checks)

```{r, eval = FALSE}
geopressureviz(
  tag,
  # path = pressurepath,
  # path = most_likely_path,
  # marginal = marginal
)
```

## Update of `tag` and `pressurepath`

```{r, eval = FALSE}
tag <- tag_update(tag)
```

```{r, eval = FALSE}
pressurepath <- pressurepath_update(pressurepath, tag)
```
